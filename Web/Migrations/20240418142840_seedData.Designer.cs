// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.Data;

#nullable disable

namespace Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240418142840_seedData")]
    partial class seedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Web.Models.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Meetings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "deneme",
                            DocumentURL = "deneme",
                            EndTime = new DateTime(2024, 4, 18, 17, 28, 39, 529, DateTimeKind.Local).AddTicks(1876),
                            Name = "pazar toplantısı",
                            StartTime = new DateTime(2024, 4, 18, 17, 28, 39, 529, DateTimeKind.Local).AddTicks(1894)
                        },
                        new
                        {
                            Id = 2,
                            Description = "deneme",
                            DocumentURL = "deneme",
                            EndTime = new DateTime(2024, 4, 18, 17, 28, 39, 529, DateTimeKind.Local).AddTicks(1897),
                            Name = "sali toplantısı",
                            StartTime = new DateTime(2024, 4, 18, 17, 28, 39, 529, DateTimeKind.Local).AddTicks(1898)
                        },
                        new
                        {
                            Id = 3,
                            Description = "deneme",
                            DocumentURL = "deneme",
                            EndTime = new DateTime(2024, 4, 18, 17, 28, 39, 529, DateTimeKind.Local).AddTicks(1901),
                            Name = "toplanmantısı",
                            StartTime = new DateTime(2024, 4, 18, 17, 28, 39, 529, DateTimeKind.Local).AddTicks(1902)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
